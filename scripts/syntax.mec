/*
 * MecScript Syntax
 */

// Preprocessor
#define DEFINITION 10

// Import/Include


// Variables
byte b = 0xFF;
byte bb = 0b11110000;
int i = 0;
float f = 1.1;
bool bf = false;
bool bt = true;

int notInitialised;

const float cf = 123.4;


// Strings
string str = "hello";

// Funtions
void myFunction() {
    println("my function!");
}

myFunction();

int add(int a, int b) {
    return a + b;
}

println(add(1, 2 * f));

// logic
if (b > c) f = 2.5;

if (f == 2.5) {
    f += 4;
} else if (add(i, f) == b) {
    f = 10 % 4;
}

// Ternary
int t = a > b ? 5 : add(5, 5);


// Bitwise
byte bits = b & 0x10101010;


// Arrays
byte myArray[10] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };
myArray[0] += 100;
myArray[9] = 5;
myArray[9] *= myArray[2];

// Classes
class SubClass {
    int SubVal = 10101;
    SubClass() {
        printi(SubVal * 2);
    }
}

int created;
int deleted;

class Object {
    int val0 = 100;
    int val1 = 101;
    int val2 = 102;
    int val3 = 103;

    SubClass sub();

    byte myArray[] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };

    void PrintVal(int x) {
       printi(val1 + x);
    }

    int val4 = 104;

    Object(int val) {
        val1 = val;
        created++;
    }

    ~Object() {
        deleted++;
    }
}

//Class Instances
Object inst(555);
printi(inst.val0);
printi(inst.sub.SubVal);
printi(inst.val4);
inst.val1 /= 2;
inst.PrintVal(1000);

// While
int whileVal = 0;

while(whileVal < 10) {
    printi(whileVal);
    ++switchTest;
}

// For
for (float x = 0; x < 10; x = x + 1.6) {
        if (x == 3.2) {
            printf(x * b + a);
            continue;
        }
        if (x >= 6.4)
            break;
        printf(x);
}

for (; whileVal >= 4; --whileVal)
    printi(whileVal);

for (;;) {
    // Infinate loop
    print("this will never end");
}

// Switch
int switchVal = 9;
switch(switchVal) {
    //case 0:
    //    printi(1000);
    //    break;
    case 9:
        printi(900);
        break;

    case 3: // Falls through
    case 4: {
        printi(330);
        printi(340);
        } // also falls through

    default:
        printi(-1);
        break;
}
