/* MecScript Native Functions Example
 * These function signatures are used to perform tasks in the virtual machines native environment.
 * It's assumed that the native function resolver in the MecScript VM will handle these signatures.
 *
 * Each function must be marked with a [native #] attribute containing a unique identifier number.
 * The identifiers are used to map these functions to their implementations in the MecScript VM.
 */

// Print - This function prints a string to the VM host's stdout.
[native 1] void print(string str);

// Print Line - Prints a string followed by a newline to the VM host's stdout.
[native 2] void println(string str);

// Print Integer - Prints an integer to the VM host's stdout.
[native 3] void printi(int i);

// Print Float - Prints a float to the VM host's stdout.
[native 4] void printf(float f);

// Print Format - Prints a formatted string with a float value to the VM host's stdout. Eg: printfmt("Value: %f", 3.14);
[native 5] void printfmt(string str, float f);

// Clock - Returns the current host environment's clock time. Typically in milliseconds.
[native 6] int clock();

// Yield - Yield for a specified time in milliseconds, allowing the VM to pause execution.
[native 7] void yield(uint t);

// Yield Until - Yield execution until a specified time in milliseconds.
[native 8] void yieldUntil(uint t);
